services:
  db:
    image: mariadb:11
    container_name: db
    restart: unless-stopped
    env_file: .env
    volumes:
      - dbdata:/var/lib/mysql
    command: "--default-authentication-plugin=mysql_native_password"
    networks:
      - app-network
  db2:
    image: mysql:8
    container_name: db2
    restart: unless-stopped
    env_file: .env
    volumes:
      - dbdata2:/var/lib/mysql
    command: "--default-authentication-plugin=mysql_native_password --sql_mode='NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION'"
    ports:
      - "10984:3306"
    networks:
      - app-network
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGODB_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGODB_PASSWORD
    volumes:
      - dbdata3:/data/db
    networks:
      - app-network
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    env_file: .env
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: "ambiance"
      ME_CONFIG_MONGODB_SERVER: $ME_CONFIG_MONGODB_SERVER
      ME_CONFIG_BASICAUTH_USERNAME: $ME_CONFIG_BASICAUTH_USERNAME
      ME_CONFIG_BASICAUTH_PASSWORD: $ME_CONFIG_BASICAUTH_PASSWORD
    networks:
      - app-network
  express:
    build: ./Shoe-Store/Shoe-Store/server
    depends_on:
      - mongo
    container_name: express
    restart: unless-stopped
    networks:
      - app-network
  pos:
    build: ./Shoe-Store/Shoe-Store/client
    depends_on:
      - mongo
      - express
    container_name: pos
    restart: unless-stopped
    networks:
      - app-network
  phpmyadmin:
    build: ./phpmyadmin
    depends_on:
      - db
    container_name: phpmyadmin
    restart: unless-stopped
    networks:
      - app-network
    env_file: .env
    volumes:
      - pma:/var/www/pma/html/
    environment:
      PMA_HOSTS: db, db2
      UPLOAD_LIMIT: 50M
  php:
    build: ./php
    container_name: php
    restart: unless-stopped
    volumes:
      - ./src:/var/www/joblinkup/
    networks:
      - app-network
    env_file:
      - .env
  wordpress:
    depends_on:
      - db
    image: wordpress:6-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    working_dir: /var/www/wordpress0/html
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wordpress:/var/www/wordpress0/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - app-network
  wordpress1:
    depends_on:
      - db
    image: wordpress:php7.4-fpm-alpine
    container_name: wordpress1
    restart: unless-stopped
    env_file: .env
    working_dir: /var/www/wordpress1/html
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=wordpress1
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress1
    volumes:
      - wordpress1:/var/www/wordpress1/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - app-network
  wordpress2:
    depends_on:
      - db
    image: wordpress:6-fpm-alpine
    container_name: wordpress2
    restart: unless-stopped
    env_file: .env
    working_dir: /var/www/wordpress2/html
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=wordpress2
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress2
    volumes:
      - wordpress2:/var/www/wordpress2/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - app-network
  webserver:
    image: caddy:alpine
    depends_on:
      - phpmyadmin
      - wordpress
      - wordpress1
      - wordpress2
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - pma:/var/www/pma/html/
      - wordpress:/var/www/wordpress0/html
      - wordpress1:/var/www/wordpress1/html
      - wordpress2:/var/www/wordpress2/html
      - ./src:/var/www/joblinkup/
      - ./caddy-conf:/etc/caddy/
      - caddy-config:/config
      - caddy-data:/data
    networks:
      - app-network
  hotels:
    build: ./Hotel-Management
    depends_on:
      - webserver
    container_name: hotels
    restart: unless-stopped
    networks:
      - app-network
  cars:
    build: ./car-rental-nikila
    depends_on:
      - webserver
    container_name: cars
    restart: unless-stopped
    volumes:
      - ./car-rental-nikila/assets:/app/assets
    networks:
      - app-network
  bgrm:
    build: ./bgrm
    depends_on:
      - webserver
    container_name: bgrm
    networks:
      - app-network
  portfolio:
    build: ./JAK-Digi-Portfolio
    depends_on:
      - webserver
    container_name: portfolio
    restart: unless-stopped
    networks:
      - app-network
  composer:
    restart: "no"
    container_name: composer
    image: "composer"
    command: install --no-suggest
    volumes:
      - ./src/app/:/app

volumes:
  dbdata:
  dbdata2:
  dbdata3:
  pma:
  caddy-config:
  caddy-data:
  wordpress:
  wordpress1:
  wordpress2:

networks:
  app-network:
    driver: bridge
